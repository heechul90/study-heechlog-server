plugins {
    id 'java-library'
    id 'org.springframework.boot' apply false
    id 'io.spring.dependency-management'
    id 'io.spring.javaformat' apply false
    id 'org.asciidoctor.jvm.convert' apply false
}

apply from: 'lint.gradle'

allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"
    sourceCompatibility = project.javaVersion

    repositories {
        mavenCentral()
        maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.jvm.convert'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        //lombok and mapstruct
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0' // v1.18.16+ 부터
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0' // v1.18.16+ 부터
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

        //test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'com.h2database:h2'
    }

    bootJar.enabled = false
    jar.enabled = true

    test {
        useJUnitPlatform {
            excludeTags('develop', 'restdocs')
        }
    }

    tasks.register('unitTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            excludeTags('develop', 'context', 'restdocs')
        }
    }

    tasks.register('contextTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('context')
        }
    }

    tasks.register('restDocsTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('restdocs')
        }
    }

    tasks.register('developTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('develop')
        }
    }

    tasks.named('asciidoctor') {
        dependsOn restDocsTest
    }
}
